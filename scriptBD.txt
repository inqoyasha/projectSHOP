DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS order_product;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS checkouts;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS checkout_product;

CREATE TABLE category(
   c_id serial PRIMARY KEY,
   name varchar,
   description varchar,
   imageURL varchar,
   active boolean
);

CREATE TABLE products(
   p_id serial PRIMARY KEY,
   product_name VARCHAR (50) NOT NULL,
   pictureURL varchar NOT NULL,
   price numeric NOT NULL,
   description varchar,
   manufacturer varchar,
   quantity int,
   active boolean,
   category_id int,

   FOREIGN KEY (category_id) REFERENCES category(c_id)
);

INSERT INTO category(name, description, imageURL, active) VALUES ('tv', 'TVs', 'TV.png', TRUE);
INSERT INTO category(name, description, imageURL, active) VALUES ('phone', 'PHONEs', 'Phone.png', TRUE);

INSERT INTO products(product_name, pictureURL, price, description, manufacturer, quantity, active, category_id) VALUES ('TV','tv.png', 4999.99, 'The new TV', 'SONY', 20, TRUE, 1);
INSERT INTO products(product_name, pictureURL, price, description, manufacturer, quantity, active, category_id) VALUES ('phone','phone.png', 699.99, 'The new Phone', 'ALCATEL', 13, TRUE, 2);
INSERT INTO products(product_name, pictureURL, price, description, manufacturer, quantity, active, category_id) VALUES ('iphone','iphone.png', 1500.0, 'The old iPhone', 'APPLE', 4, TRUE, 2);

CREATE TABLE orders(
   o_id serial PRIMARY KEY,
   user_id int
);

CREATE TABLE users(
   id serial PRIMARY KEY,
   username varchar,
   password varchar,
   first_name varchar,
   last_name varchar,
   patronymic varchar,
   o_id int,
   address varchar, 
   email varchar,
   date_created timestamp,
   date_updated timestamp,
   status varchar
);

CREATE TABLE users_orders(
   o_id int not null,
   user_id int not null,

   FOREIGN KEY (user_id) REFERENCES users(id),
   FOREIGN KEY (o_id) REFERENCES orders(o_id)
);

CREATE TABLE order_product(
   op_id serial PRIMARY KEY,
   o_id int NOT NULL,
   p_id int NOT NULL,
   quantity int,
   
   FOREIGN KEY (o_id) REFERENCES orders(o_id),
   FOREIGN KEY (p_id) REFERENCES products(p_id)
);


CREATE TABLE roles(
   id serial PRIMARY KEY,
   name varchar
);

CREATE TABLE checkouts(
   id serial PRIMARY KEY,
   user_id int,
   name varchar,
   date_created timestamp,
   status varchar,
   
   FOREIGN KEY (user_id) REFERENCES users(id)

);

CREATE TABLE checkout_product(
   id serial PRIMARY KEY,
   checkout_id int,
   product_id int,
   quantity int,

   FOREIGN KEY (checkout_id) REFERENCES checkouts(id),
   FOREIGN KEY (product_id) REFERENCES products(p_id)

);


CREATE TABLE user_roles(
   user_id int not null,
   role_id int not null,

   FOREIGN KEY (user_id) REFERENCES users(id),
   FOREIGN KEY (role_id) REFERENCES roles(id),

   UNIQUE (user_id, role_id)
);

insert into roles values (1,'ROLE_USER');
insert into roles values (2,'ROLE_ADMIN');
INSERT INTO users(username, password, first_name, last_name, patronymic, o_id, address, email, date_created, date_updated, status) VALUES ('admin','$2a$10$DUZ5UISVrx3hkYbXpoy3aeOqztX/tD9oXwbLJ4vGimmJVGRP2y9Fm','admin', 'admin', '', null,'','', '01-01-1970','01-01-1970', 'ACTIVE');
insert into user_roles values (1,2);
